{"ast":null,"code":"var _jsxFileName = \"/Users/cecialbero/Documents/cecialbero/santex-fe-challenge-basic/src/context/EcommerceState.tsx\",\n    _s = $RefreshSig$();\n\nimport EcommerceContext from './ecommerceContext';\nimport { useQuery } from '@apollo/client';\nimport { PRODUCTS } from '../graphql/queries';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EcommerceState = props => {\n  _s();\n\n  /*const initialState = {\n      products: null\n  }\n   const [state, dispatch] = useReducer(EcommerceReducer, initialState)*/\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(PRODUCTS);\n  console.log(error);\n  return /*#__PURE__*/_jsxDEV(EcommerceContext.Provider, {\n    value: {\n      loading,\n      data\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 12\n  }, this);\n};\n\n_s(EcommerceState, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = EcommerceState;\nexport default EcommerceState;\n\nvar _c;\n\n$RefreshReg$(_c, \"EcommerceState\");","map":{"version":3,"sources":["/Users/cecialbero/Documents/cecialbero/santex-fe-challenge-basic/src/context/EcommerceState.tsx"],"names":["EcommerceContext","useQuery","PRODUCTS","EcommerceState","props","loading","error","data","console","log","children"],"mappings":";;;AACA,OAAOA,gBAAP,MAA6B,oBAA7B;AAEA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,QAAT,QAAyB,oBAAzB;;;AAGA,MAAMC,cAAc,GAAIC,KAAD,IAAgB;AAAA;;AAEnC;AACJ;AACA;AACA;AAGI,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BN,QAAQ,CAACC,QAAD,CAAzC;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AAGA,sBAAO,QAAC,gBAAD,CAAkB,QAAlB;AAA2B,IAAA,KAAK,EAAE;AACrCD,MAAAA,OADqC;AAErCE,MAAAA;AAFqC,KAAlC;AAAA,cAIFH,KAAK,CAACM;AAJJ;AAAA;AAAA;AAAA;AAAA,UAAP;AAMH,CAlBD;;GAAMP,c;UAQ+BF,Q;;;KAR/BE,c;AAoBN,eAAeA,cAAf","sourcesContent":["import { useReducer } from 'react'\nimport EcommerceContext from './ecommerceContext'\nimport EcommerceReducer from './ecommerceReducer'\nimport { useQuery } from '@apollo/client'\nimport { PRODUCTS } from '../graphql/queries'\nimport { GET_PRODUCTS } from './types'\n\nconst EcommerceState = (props: any) => {\n\n    /*const initialState = {\n        products: null\n    }\n\n    const [state, dispatch] = useReducer(EcommerceReducer, initialState)*/\n\n    const { loading, error, data } = useQuery(PRODUCTS)\n    console.log(error)\n\n\n    return <EcommerceContext.Provider value={{\n        loading,\n        data\n    }}>\n        {props.children}\n    </EcommerceContext.Provider>\n}\n\nexport default EcommerceState"]},"metadata":{},"sourceType":"module"}