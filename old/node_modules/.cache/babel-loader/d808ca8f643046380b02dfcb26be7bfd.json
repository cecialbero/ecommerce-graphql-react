{"ast":null,"code":"var _jsxFileName = \"/Users/cecialbero/Documents/cecialbero/santex-fe-challenge-basic/src/index.tsx\";\nimport { ApolloClient, ApolloLink, createHttpLink, InMemoryCache } from '@apollo/client';\nimport { ApolloProvider } from '@apollo/client/react';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { query } from './graphql/queries';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst commerceLink = createHttpLink({\n  uri: 'https://shrouded-wave-86340.herokuapp.com/shop-api',\n  headers: {\n    authorization: localStorage.getItem('Auth-Token') ? `Bearer ${localStorage.getItem('Auth-Token')}` : ''\n  }\n});\nconst afterwareLink = new ApolloLink((operation, forward) => {\n  return forward(operation).map(response => {\n    const context = operation.getContext();\n    const authHeader = context.response.headers.get('Vendure-Auth-Token');\n\n    if (authHeader) {\n      localStorage.setItem('Auth-Token', authHeader);\n    }\n\n    return response;\n  });\n});\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: ApolloLink.from([afterwareLink, commerceLink])\n});\nclient.query({\n  query\n}).then(res => console.log(res.data));\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(ApolloProvider, {\n    client: client,\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 47,\n  columnNumber: 3\n}, this), document.getElementById('root')); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();","map":{"version":3,"sources":["/Users/cecialbero/Documents/cecialbero/santex-fe-challenge-basic/src/index.tsx"],"names":["ApolloClient","ApolloLink","createHttpLink","InMemoryCache","ApolloProvider","React","ReactDOM","App","query","reportWebVitals","commerceLink","uri","headers","authorization","localStorage","getItem","afterwareLink","operation","forward","map","response","context","getContext","authHeader","get","setItem","client","cache","link","from","then","res","console","log","data","render","document","getElementById"],"mappings":";AAAA,SACEA,YADF,EAEEC,UAFF,EAGEC,cAHF,EAIEC,aAJF,QAKO,gBALP;AAMA,SAASC,cAAT,QAA+B,sBAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAASC,KAAT,QAAsB,mBAAtB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AAEA,OAAO,aAAP;;AAGA,MAAMC,YAAY,GAAGR,cAAc,CAAC;AAClCS,EAAAA,GAAG,EAAE,oDAD6B;AAElCC,EAAAA,OAAO,EAAE;AACPC,IAAAA,aAAa,EAAEC,YAAY,CAACC,OAAb,CAAqB,YAArB,IACV,UAASD,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAmC,EADlC,GAEX;AAHG;AAFyB,CAAD,CAAnC;AASA,MAAMC,aAAa,GAAG,IAAIf,UAAJ,CAAe,CAACgB,SAAD,EAAYC,OAAZ,KAAwB;AAC3D,SAAOA,OAAO,CAACD,SAAD,CAAP,CAAmBE,GAAnB,CAAwBC,QAAD,IAAc;AAC1C,UAAMC,OAAO,GAAGJ,SAAS,CAACK,UAAV,EAAhB;AACA,UAAMC,UAAU,GAAGF,OAAO,CAACD,QAAR,CAAiBR,OAAjB,CAAyBY,GAAzB,CAA6B,oBAA7B,CAAnB;;AAEA,QAAID,UAAJ,EAAgB;AACdT,MAAAA,YAAY,CAACW,OAAb,CAAqB,YAArB,EAAmCF,UAAnC;AACD;;AACD,WAAOH,QAAP;AACD,GARM,CAAP;AASD,CAVqB,CAAtB;AAYA,MAAMM,MAAM,GAAG,IAAI1B,YAAJ,CAAiB;AAC9B2B,EAAAA,KAAK,EAAE,IAAIxB,aAAJ,EADuB;AAE9ByB,EAAAA,IAAI,EAAE3B,UAAU,CAAC4B,IAAX,CAAgB,CAACb,aAAD,EAAgBN,YAAhB,CAAhB;AAFwB,CAAjB,CAAf;AAKAgB,MAAM,CAAClB,KAAP,CAAa;AAACA,EAAAA;AAAD,CAAb,EACGsB,IADH,CACQC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB,CADf;AAGA5B,QAAQ,CAAC6B,MAAT,eACE,QAAC,KAAD,CAAO,UAAP;AAAA,yBACE,QAAC,cAAD;AAAgB,IAAA,MAAM,EAAET,MAAxB;AAAA,2BACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EAMEU,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CANF,E,CASA;AACA;AACA;;AACA5B,eAAe","sourcesContent":["import {\n  ApolloClient,\n  ApolloLink,\n  createHttpLink,\n  InMemoryCache,\n} from '@apollo/client';\nimport { ApolloProvider } from '@apollo/client/react';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { query } from './graphql/queries';\nimport reportWebVitals from './reportWebVitals';\n\nimport './index.css';\nimport { ThemeConsumer } from 'styled-components';\n\nconst commerceLink = createHttpLink({\n  uri: 'https://shrouded-wave-86340.herokuapp.com/shop-api',\n  headers: {\n    authorization: localStorage.getItem('Auth-Token')\n      ? `Bearer ${localStorage.getItem('Auth-Token')}`\n      : '',\n  },\n});\n\nconst afterwareLink = new ApolloLink((operation, forward) => {\n  return forward(operation).map((response) => {\n    const context = operation.getContext();\n    const authHeader = context.response.headers.get('Vendure-Auth-Token');\n\n    if (authHeader) {\n      localStorage.setItem('Auth-Token', authHeader);\n    }\n    return response;\n  });\n});\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: ApolloLink.from([afterwareLink, commerceLink]),\n});\n\nclient.query({query})\n  .then(res => console.log(res.data))\n\nReactDOM.render(\n  <React.StrictMode>\n    <ApolloProvider client={client}>\n      <App />\n    </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}