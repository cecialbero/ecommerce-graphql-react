{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.formatApolloErrors = exports.UserInputError = exports.PersistedQueryNotSupportedError = exports.PersistedQueryNotFoundError = exports.ForbiddenError = exports.AuthenticationError = exports.ValidationError = exports.SyntaxError = exports.fromGraphQLError = exports.toApolloError = exports.ApolloError = void 0;\n\nconst graphql_1 = require(\"graphql\");\n\nclass ApolloError extends Error {\n  constructor(message, code, extensions) {\n    super(message);\n\n    if (!this.name) {\n      Object.defineProperty(this, 'name', {\n        value: 'ApolloError'\n      });\n    }\n\n    if (extensions === null || extensions === void 0 ? void 0 : extensions.extensions) {\n      throw Error('Pass extensions directly as the third argument of the ApolloError constructor: `new ' + 'ApolloError(message, code, {myExt: value})`, not `new ApolloError(message, code, ' + '{extensions: {myExt: value}})`');\n    }\n\n    this.extensions = { ...extensions,\n      code\n    };\n  }\n\n  toJSON() {\n    return (0, graphql_1.formatError)(toGraphQLError(this));\n  }\n\n  toString() {\n    return (0, graphql_1.printError)(toGraphQLError(this));\n  }\n\n  get [Symbol.toStringTag]() {\n    return this.name;\n  }\n\n}\n\nexports.ApolloError = ApolloError;\n\nfunction toGraphQLError(error) {\n  return new graphql_1.GraphQLError(error.message, error.nodes, error.source, error.positions, error.path, error.originalError, error.extensions);\n}\n\nfunction enrichError(error, debug = false) {\n  var _a, _b, _c;\n\n  const expanded = Object.create(Object.getPrototypeOf(error), {\n    name: {\n      value: error.name\n    },\n    message: {\n      value: error.message,\n      enumerable: true,\n      writable: true\n    },\n    locations: {\n      value: error.locations || undefined,\n      enumerable: true\n    },\n    path: {\n      value: error.path || undefined,\n      enumerable: true\n    },\n    nodes: {\n      value: error.nodes || undefined\n    },\n    source: {\n      value: error.source || undefined\n    },\n    positions: {\n      value: error.positions || undefined\n    },\n    originalError: {\n      value: error.originalError\n    }\n  });\n  expanded.extensions = { ...error.extensions,\n    code: ((_a = error.extensions) === null || _a === void 0 ? void 0 : _a.code) || 'INTERNAL_SERVER_ERROR',\n    exception: { ...((_b = error.extensions) === null || _b === void 0 ? void 0 : _b.exception),\n      ...error.originalError\n    }\n  };\n  delete expanded.extensions.exception.extensions;\n\n  if (debug && !expanded.extensions.exception.stacktrace) {\n    const stack = ((_c = error.originalError) === null || _c === void 0 ? void 0 : _c.stack) || error.stack;\n    expanded.extensions.exception.stacktrace = stack === null || stack === void 0 ? void 0 : stack.split('\\n');\n  }\n\n  if (Object.keys(expanded.extensions.exception).length === 0) {\n    delete expanded.extensions.exception;\n  }\n\n  return expanded;\n}\n\nfunction toApolloError(error, code = 'INTERNAL_SERVER_ERROR') {\n  let err = error;\n\n  if (err.extensions) {\n    err.extensions.code = code;\n  } else {\n    err.extensions = {\n      code\n    };\n  }\n\n  return err;\n}\n\nexports.toApolloError = toApolloError;\n\nfunction fromGraphQLError(error, options) {\n  const copy = (options === null || options === void 0 ? void 0 : options.errorClass) ? new options.errorClass(error.message) : new ApolloError(error.message);\n  Object.entries(error).forEach(([key, value]) => {\n    if (key === 'extensions') {\n      return;\n    }\n\n    copy[key] = value;\n  });\n  copy.extensions = { ...copy.extensions,\n    ...error.extensions\n  };\n\n  if (!copy.extensions.code) {\n    copy.extensions.code = (options === null || options === void 0 ? void 0 : options.code) || 'INTERNAL_SERVER_ERROR';\n  }\n\n  Object.defineProperty(copy, 'originalError', {\n    value: {}\n  });\n  Object.getOwnPropertyNames(error).forEach(key => {\n    Object.defineProperty(copy.originalError, key, {\n      value: error[key]\n    });\n  });\n  return copy;\n}\n\nexports.fromGraphQLError = fromGraphQLError;\n\nclass SyntaxError extends ApolloError {\n  constructor(message) {\n    super(message, 'GRAPHQL_PARSE_FAILED');\n    Object.defineProperty(this, 'name', {\n      value: 'SyntaxError'\n    });\n  }\n\n}\n\nexports.SyntaxError = SyntaxError;\n\nclass ValidationError extends ApolloError {\n  constructor(message) {\n    super(message, 'GRAPHQL_VALIDATION_FAILED');\n    Object.defineProperty(this, 'name', {\n      value: 'ValidationError'\n    });\n  }\n\n}\n\nexports.ValidationError = ValidationError;\n\nclass AuthenticationError extends ApolloError {\n  constructor(message, extensions) {\n    super(message, 'UNAUTHENTICATED', extensions);\n    Object.defineProperty(this, 'name', {\n      value: 'AuthenticationError'\n    });\n  }\n\n}\n\nexports.AuthenticationError = AuthenticationError;\n\nclass ForbiddenError extends ApolloError {\n  constructor(message, extensions) {\n    super(message, 'FORBIDDEN', extensions);\n    Object.defineProperty(this, 'name', {\n      value: 'ForbiddenError'\n    });\n  }\n\n}\n\nexports.ForbiddenError = ForbiddenError;\n\nclass PersistedQueryNotFoundError extends ApolloError {\n  constructor() {\n    super('PersistedQueryNotFound', 'PERSISTED_QUERY_NOT_FOUND');\n    Object.defineProperty(this, 'name', {\n      value: 'PersistedQueryNotFoundError'\n    });\n  }\n\n}\n\nexports.PersistedQueryNotFoundError = PersistedQueryNotFoundError;\n\nclass PersistedQueryNotSupportedError extends ApolloError {\n  constructor() {\n    super('PersistedQueryNotSupported', 'PERSISTED_QUERY_NOT_SUPPORTED');\n    Object.defineProperty(this, 'name', {\n      value: 'PersistedQueryNotSupportedError'\n    });\n  }\n\n}\n\nexports.PersistedQueryNotSupportedError = PersistedQueryNotSupportedError;\n\nclass UserInputError extends ApolloError {\n  constructor(message, extensions) {\n    super(message, 'BAD_USER_INPUT', extensions);\n    Object.defineProperty(this, 'name', {\n      value: 'UserInputError'\n    });\n  }\n\n}\n\nexports.UserInputError = UserInputError;\n\nfunction formatApolloErrors(errors, options) {\n  if (!options) {\n    return errors.map(error => enrichError(error));\n  }\n\n  const {\n    formatter,\n    debug\n  } = options;\n  const enrichedErrors = errors.map(error => enrichError(error, debug));\n\n  const makePrintable = error => {\n    if (error instanceof Error) {\n      const graphQLError = error;\n      return {\n        message: graphQLError.message,\n        ...(graphQLError.locations && {\n          locations: graphQLError.locations\n        }),\n        ...(graphQLError.path && {\n          path: graphQLError.path\n        }),\n        ...(graphQLError.extensions && {\n          extensions: graphQLError.extensions\n        })\n      };\n    }\n\n    return error;\n  };\n\n  if (!formatter) {\n    return enrichedErrors;\n  }\n\n  return enrichedErrors.map(error => {\n    try {\n      return makePrintable(formatter(error));\n    } catch (err) {\n      if (debug) {\n        return enrichError(err, debug);\n      } else {\n        const newError = fromGraphQLError(new graphql_1.GraphQLError('Internal server error'));\n        return enrichError(newError, debug);\n      }\n    }\n  });\n}\n\nexports.formatApolloErrors = formatApolloErrors;","map":{"version":3,"sources":["../src/index.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.formatApolloErrors = exports.UserInputError = exports.PersistedQueryNotSupportedError = exports.PersistedQueryNotFoundError = exports.ForbiddenError = exports.AuthenticationError = exports.ValidationError = exports.SyntaxError = exports.fromGraphQLError = exports.toApolloError = exports.ApolloError = void 0;\nconst graphql_1 = require(\"graphql\");\nclass ApolloError extends Error {\n    constructor(message, code, extensions) {\n        super(message);\n        if (!this.name) {\n            Object.defineProperty(this, 'name', { value: 'ApolloError' });\n        }\n        if (extensions === null || extensions === void 0 ? void 0 : extensions.extensions) {\n            throw Error('Pass extensions directly as the third argument of the ApolloError constructor: `new ' +\n                'ApolloError(message, code, {myExt: value})`, not `new ApolloError(message, code, ' +\n                '{extensions: {myExt: value}})`');\n        }\n        this.extensions = { ...extensions, code };\n    }\n    toJSON() {\n        return (0, graphql_1.formatError)(toGraphQLError(this));\n    }\n    toString() {\n        return (0, graphql_1.printError)(toGraphQLError(this));\n    }\n    get [Symbol.toStringTag]() {\n        return this.name;\n    }\n}\nexports.ApolloError = ApolloError;\nfunction toGraphQLError(error) {\n    return new graphql_1.GraphQLError(error.message, error.nodes, error.source, error.positions, error.path, error.originalError, error.extensions);\n}\nfunction enrichError(error, debug = false) {\n    var _a, _b, _c;\n    const expanded = Object.create(Object.getPrototypeOf(error), {\n        name: {\n            value: error.name,\n        },\n        message: {\n            value: error.message,\n            enumerable: true,\n            writable: true,\n        },\n        locations: {\n            value: error.locations || undefined,\n            enumerable: true,\n        },\n        path: {\n            value: error.path || undefined,\n            enumerable: true,\n        },\n        nodes: {\n            value: error.nodes || undefined,\n        },\n        source: {\n            value: error.source || undefined,\n        },\n        positions: {\n            value: error.positions || undefined,\n        },\n        originalError: {\n            value: error.originalError,\n        },\n    });\n    expanded.extensions = {\n        ...error.extensions,\n        code: ((_a = error.extensions) === null || _a === void 0 ? void 0 : _a.code) || 'INTERNAL_SERVER_ERROR',\n        exception: {\n            ...(_b = error.extensions) === null || _b === void 0 ? void 0 : _b.exception,\n            ...error.originalError,\n        },\n    };\n    delete expanded.extensions.exception.extensions;\n    if (debug && !expanded.extensions.exception.stacktrace) {\n        const stack = ((_c = error.originalError) === null || _c === void 0 ? void 0 : _c.stack) || error.stack;\n        expanded.extensions.exception.stacktrace = stack === null || stack === void 0 ? void 0 : stack.split('\\n');\n    }\n    if (Object.keys(expanded.extensions.exception).length === 0) {\n        delete expanded.extensions.exception;\n    }\n    return expanded;\n}\nfunction toApolloError(error, code = 'INTERNAL_SERVER_ERROR') {\n    let err = error;\n    if (err.extensions) {\n        err.extensions.code = code;\n    }\n    else {\n        err.extensions = { code };\n    }\n    return err;\n}\nexports.toApolloError = toApolloError;\nfunction fromGraphQLError(error, options) {\n    const copy = (options === null || options === void 0 ? void 0 : options.errorClass)\n        ? new options.errorClass(error.message)\n        : new ApolloError(error.message);\n    Object.entries(error).forEach(([key, value]) => {\n        if (key === 'extensions') {\n            return;\n        }\n        copy[key] = value;\n    });\n    copy.extensions = {\n        ...copy.extensions,\n        ...error.extensions,\n    };\n    if (!copy.extensions.code) {\n        copy.extensions.code = (options === null || options === void 0 ? void 0 : options.code) || 'INTERNAL_SERVER_ERROR';\n    }\n    Object.defineProperty(copy, 'originalError', { value: {} });\n    Object.getOwnPropertyNames(error).forEach((key) => {\n        Object.defineProperty(copy.originalError, key, {\n            value: error[key],\n        });\n    });\n    return copy;\n}\nexports.fromGraphQLError = fromGraphQLError;\nclass SyntaxError extends ApolloError {\n    constructor(message) {\n        super(message, 'GRAPHQL_PARSE_FAILED');\n        Object.defineProperty(this, 'name', { value: 'SyntaxError' });\n    }\n}\nexports.SyntaxError = SyntaxError;\nclass ValidationError extends ApolloError {\n    constructor(message) {\n        super(message, 'GRAPHQL_VALIDATION_FAILED');\n        Object.defineProperty(this, 'name', { value: 'ValidationError' });\n    }\n}\nexports.ValidationError = ValidationError;\nclass AuthenticationError extends ApolloError {\n    constructor(message, extensions) {\n        super(message, 'UNAUTHENTICATED', extensions);\n        Object.defineProperty(this, 'name', { value: 'AuthenticationError' });\n    }\n}\nexports.AuthenticationError = AuthenticationError;\nclass ForbiddenError extends ApolloError {\n    constructor(message, extensions) {\n        super(message, 'FORBIDDEN', extensions);\n        Object.defineProperty(this, 'name', { value: 'ForbiddenError' });\n    }\n}\nexports.ForbiddenError = ForbiddenError;\nclass PersistedQueryNotFoundError extends ApolloError {\n    constructor() {\n        super('PersistedQueryNotFound', 'PERSISTED_QUERY_NOT_FOUND');\n        Object.defineProperty(this, 'name', {\n            value: 'PersistedQueryNotFoundError',\n        });\n    }\n}\nexports.PersistedQueryNotFoundError = PersistedQueryNotFoundError;\nclass PersistedQueryNotSupportedError extends ApolloError {\n    constructor() {\n        super('PersistedQueryNotSupported', 'PERSISTED_QUERY_NOT_SUPPORTED');\n        Object.defineProperty(this, 'name', {\n            value: 'PersistedQueryNotSupportedError',\n        });\n    }\n}\nexports.PersistedQueryNotSupportedError = PersistedQueryNotSupportedError;\nclass UserInputError extends ApolloError {\n    constructor(message, extensions) {\n        super(message, 'BAD_USER_INPUT', extensions);\n        Object.defineProperty(this, 'name', { value: 'UserInputError' });\n    }\n}\nexports.UserInputError = UserInputError;\nfunction formatApolloErrors(errors, options) {\n    if (!options) {\n        return errors.map((error) => enrichError(error));\n    }\n    const { formatter, debug } = options;\n    const enrichedErrors = errors.map((error) => enrichError(error, debug));\n    const makePrintable = (error) => {\n        if (error instanceof Error) {\n            const graphQLError = error;\n            return {\n                message: graphQLError.message,\n                ...(graphQLError.locations && { locations: graphQLError.locations }),\n                ...(graphQLError.path && { path: graphQLError.path }),\n                ...(graphQLError.extensions && { extensions: graphQLError.extensions }),\n            };\n        }\n        return error;\n    };\n    if (!formatter) {\n        return enrichedErrors;\n    }\n    return enrichedErrors.map((error) => {\n        try {\n            return makePrintable(formatter(error));\n        }\n        catch (err) {\n            if (debug) {\n                return enrichError(err, debug);\n            }\n            else {\n                const newError = fromGraphQLError(new graphql_1.GraphQLError('Internal server error'));\n                return enrichError(newError, debug);\n            }\n        }\n    });\n}\nexports.formatApolloErrors = formatApolloErrors;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}